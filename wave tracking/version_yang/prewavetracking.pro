;pro prewavetracking
set_plot,'x'
;goto,findangle
Device, RETAIN=2 ;If X windows protocol error, execute this command in IDL before any graphics windows are opened
;!path=!path+expand_path('+/home/htian/Scratch')
;.compile taper
;.compile doppcorr
cd,'/Data/comp_2019/'
date='20161014';'20120409';'20111230';

;NOTE: should restore data cube from level 1 or level 2 data in this step.
; restore,'./'+date+'/1074.l2/wave/1074fitI_new_1.sav' ; for level 2 data
; restore,'./'+date+'/1074.l1/wave/1074fitI_part_new_1.sav' ;for Dopplershift-corrected level 1 data generated by using the pipeline

; ;interpolate wave data cubes onto grid uniform in time.
dt=30.   ;mean cadence of data
sigma=10.   ;tension of spline
s=size(fit_arr)  &  nx=s(1)  &  ny=s(2)  &  ntime=s(4)

time_sec=anytim(time_obs) ;in the unit of sec
old_time=time_sec-time_sec[0]
time=old_time(0)+findgen(ntime)*dt;change the cadence into uniform 30s
for i=0,nx-1 do begin
;print,i
for j=0,ny-1 do begin
  fit_arr(i,j,1,*)=spline(old_time,reform(fit_arr(i,j,1,*)),time,sigma,/double)
endfor
endfor
velo=reform(fit_arr[*,*,1,*])
fit_arr=0
save,velo,time,file='./'+date+'/velocity_interp.sav'
; ; goto,velofft

;filter data with gaussian peaked at freq0 with width in frequency of fwidth
t1=0 & t2=t1+ntime-1
ntap=30     ;number of points to taper each end of time series
freq=findgen(ntime)/(float(ntime)*dt)
for i=0,ntime/2-1 do freq(ntime-i-1)=freq(i+1)
freq0=.0035  ;Hz, ~5 min
fwidth=.0015 ;Hz
filter=exp( -(freq-freq0)^2/fwidth^2 )
filter(0)=0.
for i=0,nx-1 do begin
;print,i
for j=0,ny-1 do begin
  y=reform(velo(i,j,*))
  y=y-median(y)
  ;taper,y,ntap   ;taper points at start and end of timeseries
  trans=filter*fft( y )
  velo(i,j,0:ntime-1)=fft(trans,/inverse)
endfor
endfor
time=time(t1:t2)
save,velo,time,file='./'+date+'/velocity_filtered.sav'


; ; velofft:
; ; compute spectra of velocity data cube for CoMP waves analysis
nspec=ntime/2
spec=complexarr(nx,ny,nspec,/nozero)
h=do_apod(ntime,cpg)
for ix=0,nx-1 do for iy=0,ny-1 do begin
  d=reform(velo[ix,iy,*]-mean(velo[ix,iy,*]))  ;-smooth(velo(ix,iy,*),40,/edge_truncate)
  sp=fft(d*h)
  spec(ix,iy,*)=sp(0:nspec-1)
endfor
save,spec,file='./'+date+'/velocity_unfiltered_spec.sav' ;velocity_filtered_spec.sav
restore,'./'+date+'/velocity_unfiltered_spec.sav'

; find wave propagation angle
; findangle:
xyrange=[0,619,0,619] ;xmin,xmax,ymin,ymax; spatial range of calculation
dt=30.
restore,'./'+date+'/velocity_unfiltered_spec.sav'
find_angle_v2,spec,dt,xyrange,wave_angle,angle_error
save,wave_angle,angle_error,file='./'+date+'/wave_angle_new.sav'


endprogram:
end
